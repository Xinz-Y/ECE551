Grading at 10/22/2021:00:05:42.113496
For commit ID 917ce1826b9618d54d63c3a714854b6cd27bcfdb
Grading at Thu Oct 21 20:05:23 EDT 2021
Attempting to compile:
rm -f *.o  *~ intMatrixTest
#################################################
testcase1:
Your output is correct
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase2:
Your output is correct
  - Valgrind was clean (no errors, no memory leaks)
valgrind was clean
#################################################
testcase3:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==40452== Memcheck, a memory error detector
==40452== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40452== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==40452== 
==40452== Parent PID: 40451
==40452== 
==40452== 
==40452== HEAP SUMMARY:
==40452==     in use at exit: 64 bytes in 8 blocks
==40452==   total heap usage: 17 allocs, 9 frees, 76,896 bytes allocated
==40452== 
==40452== 16 bytes in 1 blocks are definitely lost in loss record 5 of 8
==40452==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40452==    by 0x1091DE: IntMatrix::IntMatrix(int, int) (IntMatrix.cpp:7)
==40452==    by 0x108D17: main (69_test_main.cpp:6)
==40452== 
==40452== 16 bytes in 1 blocks are definitely lost in loss record 6 of 8
==40452==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40452==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40452==    by 0x108DD8: main (69_test_main.cpp:13)
==40452== 
==40452== 16 bytes in 1 blocks are definitely lost in loss record 7 of 8
==40452==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40452==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40452==    by 0x109761: IntMatrix::operator+(IntMatrix const&) const (IntMatrix.cpp:70)
==40452==    by 0x108FEF: main (69_test_main.cpp:36)
==40452== 
==40452== 16 bytes in 1 blocks are definitely lost in loss record 8 of 8
==40452==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40452==    by 0x109458: IntMatrix::operator=(IntMatrix const&) (IntMatrix.cpp:30)
==40452==    by 0x109002: main (69_test_main.cpp:36)
==40452== 
==40452== LEAK SUMMARY:
==40452==    definitely lost: 64 bytes in 4 blocks
==40452==    indirectly lost: 0 bytes in 4 blocks
==40452==      possibly lost: 0 bytes in 0 blocks
==40452==    still reachable: 0 bytes in 0 blocks
==40452==         suppressed: 0 bytes in 0 blocks
==40452== 
==40452== For counts of detected and suppressed errors, rerun with: -v
==40452== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
#################################################
testcase4:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==40505== Memcheck, a memory error detector
==40505== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40505== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==40505== 
==40505== Parent PID: 40504
==40505== 
==40505== 
==40505== HEAP SUMMARY:
==40505==     in use at exit: 224 bytes in 8 blocks
==40505==   total heap usage: 17 allocs, 9 frees, 77,176 bytes allocated
==40505== 
==40505== 56 (16 direct, 40 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 8
==40505==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40505==    by 0x1091DE: IntMatrix::IntMatrix(int, int) (IntMatrix.cpp:7)
==40505==    by 0x108D17: main (69_test_main.cpp:6)
==40505== 
==40505== 56 (16 direct, 40 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 8
==40505==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40505==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40505==    by 0x108DD8: main (69_test_main.cpp:13)
==40505== 
==40505== 56 (16 direct, 40 indirect) bytes in 1 blocks are definitely lost in loss record 7 of 8
==40505==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40505==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40505==    by 0x109761: IntMatrix::operator+(IntMatrix const&) const (IntMatrix.cpp:70)
==40505==    by 0x108FEF: main (69_test_main.cpp:36)
==40505== 
==40505== 56 (16 direct, 40 indirect) bytes in 1 blocks are definitely lost in loss record 8 of 8
==40505==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40505==    by 0x109458: IntMatrix::operator=(IntMatrix const&) (IntMatrix.cpp:30)
==40505==    by 0x109002: main (69_test_main.cpp:36)
==40505== 
==40505== LEAK SUMMARY:
==40505==    definitely lost: 64 bytes in 4 blocks
==40505==    indirectly lost: 160 bytes in 4 blocks
==40505==      possibly lost: 0 bytes in 0 blocks
==40505==    still reachable: 0 bytes in 0 blocks
==40505==         suppressed: 0 bytes in 0 blocks
==40505== 
==40505== For counts of detected and suppressed errors, rerun with: -v
==40505== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
#################################################
testcase5:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==40556== Memcheck, a memory error detector
==40556== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40556== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==40556== 
==40556== Parent PID: 40555
==40556== 
==40556== 
==40556== HEAP SUMMARY:
==40556==     in use at exit: 640 bytes in 80 blocks
==40556==   total heap usage: 116 allocs, 36 frees, 77,760 bytes allocated
==40556== 
==40556== 160 bytes in 10 blocks are definitely lost in loss record 5 of 8
==40556==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40556==    by 0x1091DE: IntMatrix::IntMatrix(int, int) (IntMatrix.cpp:7)
==40556==    by 0x108D17: main (69_test_main.cpp:6)
==40556== 
==40556== 160 bytes in 10 blocks are definitely lost in loss record 6 of 8
==40556==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40556==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40556==    by 0x108DD8: main (69_test_main.cpp:13)
==40556== 
==40556== 160 bytes in 10 blocks are definitely lost in loss record 7 of 8
==40556==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40556==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40556==    by 0x109761: IntMatrix::operator+(IntMatrix const&) const (IntMatrix.cpp:70)
==40556==    by 0x108FEF: main (69_test_main.cpp:36)
==40556== 
==40556== 160 bytes in 10 blocks are definitely lost in loss record 8 of 8
==40556==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40556==    by 0x109458: IntMatrix::operator=(IntMatrix const&) (IntMatrix.cpp:30)
==40556==    by 0x109002: main (69_test_main.cpp:36)
==40556== 
==40556== LEAK SUMMARY:
==40556==    definitely lost: 640 bytes in 40 blocks
==40556==    indirectly lost: 0 bytes in 40 blocks
==40556==      possibly lost: 0 bytes in 0 blocks
==40556==    still reachable: 0 bytes in 0 blocks
==40556==         suppressed: 0 bytes in 0 blocks
==40556== 
==40556== For counts of detected and suppressed errors, rerun with: -v
==40556== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
#################################################
testcase6:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==40605== Memcheck, a memory error detector
==40605== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40605== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==40605== 
==40605== Parent PID: 40604
==40605== 
==40605== 
==40605== HEAP SUMMARY:
==40605==     in use at exit: 2,240 bytes in 80 blocks
==40605==   total heap usage: 116 allocs, 36 frees, 80,560 bytes allocated
==40605== 
==40605== 560 (160 direct, 400 indirect) bytes in 10 blocks are definitely lost in loss record 5 of 8
==40605==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40605==    by 0x1091DE: IntMatrix::IntMatrix(int, int) (IntMatrix.cpp:7)
==40605==    by 0x108D17: main (69_test_main.cpp:6)
==40605== 
==40605== 560 (160 direct, 400 indirect) bytes in 10 blocks are definitely lost in loss record 6 of 8
==40605==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40605==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40605==    by 0x108DD8: main (69_test_main.cpp:13)
==40605== 
==40605== 560 (160 direct, 400 indirect) bytes in 10 blocks are definitely lost in loss record 7 of 8
==40605==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40605==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40605==    by 0x109761: IntMatrix::operator+(IntMatrix const&) const (IntMatrix.cpp:70)
==40605==    by 0x108FEF: main (69_test_main.cpp:36)
==40605== 
==40605== 560 (160 direct, 400 indirect) bytes in 10 blocks are definitely lost in loss record 8 of 8
==40605==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40605==    by 0x109458: IntMatrix::operator=(IntMatrix const&) (IntMatrix.cpp:30)
==40605==    by 0x109002: main (69_test_main.cpp:36)
==40605== 
==40605== LEAK SUMMARY:
==40605==    definitely lost: 640 bytes in 40 blocks
==40605==    indirectly lost: 1,600 bytes in 40 blocks
==40605==      possibly lost: 0 bytes in 0 blocks
==40605==    still reachable: 0 bytes in 0 blocks
==40605==         suppressed: 0 bytes in 0 blocks
==40605== 
==40605== For counts of detected and suppressed errors, rerun with: -v
==40605== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
#################################################
testcase7:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==40630== Memcheck, a memory error detector
==40630== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40630== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==40630== 
==40630== Parent PID: 40629
==40630== 
==40630== 
==40630== HEAP SUMMARY:
==40630==     in use at exit: 6,400 bytes in 800 blocks
==40630==   total heap usage: 1,106 allocs, 306 frees, 86,400 bytes allocated
==40630== 
==40630== 1,600 bytes in 100 blocks are definitely lost in loss record 5 of 8
==40630==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40630==    by 0x1091DE: IntMatrix::IntMatrix(int, int) (IntMatrix.cpp:7)
==40630==    by 0x108D17: main (69_test_main.cpp:6)
==40630== 
==40630== 1,600 bytes in 100 blocks are definitely lost in loss record 6 of 8
==40630==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40630==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40630==    by 0x108DD8: main (69_test_main.cpp:13)
==40630== 
==40630== 1,600 bytes in 100 blocks are definitely lost in loss record 7 of 8
==40630==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40630==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40630==    by 0x109761: IntMatrix::operator+(IntMatrix const&) const (IntMatrix.cpp:70)
==40630==    by 0x108FEF: main (69_test_main.cpp:36)
==40630== 
==40630== 1,600 bytes in 100 blocks are definitely lost in loss record 8 of 8
==40630==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40630==    by 0x109458: IntMatrix::operator=(IntMatrix const&) (IntMatrix.cpp:30)
==40630==    by 0x109002: main (69_test_main.cpp:36)
==40630== 
==40630== LEAK SUMMARY:
==40630==    definitely lost: 6,400 bytes in 400 blocks
==40630==    indirectly lost: 0 bytes in 400 blocks
==40630==      possibly lost: 0 bytes in 0 blocks
==40630==    still reachable: 0 bytes in 0 blocks
==40630==         suppressed: 0 bytes in 0 blocks
==40630== 
==40630== For counts of detected and suppressed errors, rerun with: -v
==40630== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
#################################################
testcase8:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==40675== Memcheck, a memory error detector
==40675== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40675== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==40675== 
==40675== Parent PID: 40674
==40675== 
==40675== 
==40675== HEAP SUMMARY:
==40675==     in use at exit: 22,400 bytes in 800 blocks
==40675==   total heap usage: 1,106 allocs, 306 frees, 114,400 bytes allocated
==40675== 
==40675== 5,600 (1,600 direct, 4,000 indirect) bytes in 100 blocks are definitely lost in loss record 5 of 8
==40675==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40675==    by 0x1091DE: IntMatrix::IntMatrix(int, int) (IntMatrix.cpp:7)
==40675==    by 0x108D17: main (69_test_main.cpp:6)
==40675== 
==40675== 5,600 (1,600 direct, 4,000 indirect) bytes in 100 blocks are definitely lost in loss record 6 of 8
==40675==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40675==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40675==    by 0x108DD8: main (69_test_main.cpp:13)
==40675== 
==40675== 5,600 (1,600 direct, 4,000 indirect) bytes in 100 blocks are definitely lost in loss record 7 of 8
==40675==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40675==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40675==    by 0x109761: IntMatrix::operator+(IntMatrix const&) const (IntMatrix.cpp:70)
==40675==    by 0x108FEF: main (69_test_main.cpp:36)
==40675== 
==40675== 5,600 (1,600 direct, 4,000 indirect) bytes in 100 blocks are definitely lost in loss record 8 of 8
==40675==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40675==    by 0x109458: IntMatrix::operator=(IntMatrix const&) (IntMatrix.cpp:30)
==40675==    by 0x109002: main (69_test_main.cpp:36)
==40675== 
==40675== LEAK SUMMARY:
==40675==    definitely lost: 6,400 bytes in 400 blocks
==40675==    indirectly lost: 16,000 bytes in 400 blocks
==40675==      possibly lost: 0 bytes in 0 blocks
==40675==    still reachable: 0 bytes in 0 blocks
==40675==         suppressed: 0 bytes in 0 blocks
==40675== 
==40675== For counts of detected and suppressed errors, rerun with: -v
==40675== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
#################################################
testcase9:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==40733== Memcheck, a memory error detector
==40733== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40733== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==40733== 
==40733== Parent PID: 40732
==40733== 
==40733== 
==40733== HEAP SUMMARY:
==40733==     in use at exit: 64,000 bytes in 8,000 blocks
==40733==   total heap usage: 11,006 allocs, 3,006 frees, 172,800 bytes allocated
==40733== 
==40733== 16,000 bytes in 1,000 blocks are definitely lost in loss record 5 of 8
==40733==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40733==    by 0x1091DE: IntMatrix::IntMatrix(int, int) (IntMatrix.cpp:7)
==40733==    by 0x108D17: main (69_test_main.cpp:6)
==40733== 
==40733== 16,000 bytes in 1,000 blocks are definitely lost in loss record 6 of 8
==40733==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40733==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40733==    by 0x108DD8: main (69_test_main.cpp:13)
==40733== 
==40733== 16,000 bytes in 1,000 blocks are definitely lost in loss record 7 of 8
==40733==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40733==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40733==    by 0x109761: IntMatrix::operator+(IntMatrix const&) const (IntMatrix.cpp:70)
==40733==    by 0x108FEF: main (69_test_main.cpp:36)
==40733== 
==40733== 16,000 bytes in 1,000 blocks are definitely lost in loss record 8 of 8
==40733==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40733==    by 0x109458: IntMatrix::operator=(IntMatrix const&) (IntMatrix.cpp:30)
==40733==    by 0x109002: main (69_test_main.cpp:36)
==40733== 
==40733== LEAK SUMMARY:
==40733==    definitely lost: 64,000 bytes in 4,000 blocks
==40733==    indirectly lost: 0 bytes in 4,000 blocks
==40733==      possibly lost: 0 bytes in 0 blocks
==40733==    still reachable: 0 bytes in 0 blocks
==40733==         suppressed: 0 bytes in 0 blocks
==40733== 
==40733== For counts of detected and suppressed errors, rerun with: -v
==40733== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
#################################################
testcase10:
Your output is correct
  - Valgrind reported errors
valgrind was not clean
==40804== Memcheck, a memory error detector
==40804== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==40804== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==40804== 
==40804== Parent PID: 40803
==40804== 
==40804== 
==40804== HEAP SUMMARY:
==40804==     in use at exit: 224,000 bytes in 8,000 blocks
==40804==   total heap usage: 11,006 allocs, 3,006 frees, 452,800 bytes allocated
==40804== 
==40804== 56,000 (16,000 direct, 40,000 indirect) bytes in 1,000 blocks are definitely lost in loss record 5 of 8
==40804==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40804==    by 0x1091DE: IntMatrix::IntMatrix(int, int) (IntMatrix.cpp:7)
==40804==    by 0x108D17: main (69_test_main.cpp:6)
==40804== 
==40804== 56,000 (16,000 direct, 40,000 indirect) bytes in 1,000 blocks are definitely lost in loss record 6 of 8
==40804==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40804==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40804==    by 0x108DD8: main (69_test_main.cpp:13)
==40804== 
==40804== 56,000 (16,000 direct, 40,000 indirect) bytes in 1,000 blocks are definitely lost in loss record 7 of 8
==40804==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40804==    by 0x1092C4: IntMatrix::IntMatrix(IntMatrix const&) (IntMatrix.cpp:16)
==40804==    by 0x109761: IntMatrix::operator+(IntMatrix const&) const (IntMatrix.cpp:70)
==40804==    by 0x108FEF: main (69_test_main.cpp:36)
==40804== 
==40804== 56,000 (16,000 direct, 40,000 indirect) bytes in 1,000 blocks are definitely lost in loss record 8 of 8
==40804==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==40804==    by 0x109458: IntMatrix::operator=(IntMatrix const&) (IntMatrix.cpp:30)
==40804==    by 0x109002: main (69_test_main.cpp:36)
==40804== 
==40804== LEAK SUMMARY:
==40804==    definitely lost: 64,000 bytes in 4,000 blocks
==40804==    indirectly lost: 160,000 bytes in 4,000 blocks
==40804==      possibly lost: 0 bytes in 0 blocks
==40804==    still reachable: 0 bytes in 0 blocks
==40804==         suppressed: 0 bytes in 0 blocks
==40804== 
==40804== For counts of detected and suppressed errors, rerun with: -v
==40804== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)

Overall Grade: B
